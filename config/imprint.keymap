#include <input/processors.dtsi>
#include <dt-bindings/zmk/input_transform.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    chosen { zmk,matrix-transform = &imprint_function_row_full_bottom_row; };

    macros {
        new_macro: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none>;
            label = "NEW_MACRO";
        };
    };

    behaviors {
        new_behavior: new_behavior {
            compatible = "zmk,behavior-tap-dance";
            label = "NEW_BEHAVIOR";
            #binding-cells = <0>;
            bindings = <&mkp LCLK>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&tog 1         &kp F1    &mkp LCLK  &mkp MCLK  &mkp RCLK       &kp F5                        &mkp LCLK  &mkp MCLK          &mkp RCLK        &kp F9            &kp F10            &kp F11
&kp EQUAL      &kp N1    &kp N2     &kp N3     &kp N4          &kp N5                        &kp N6     &kp N7             &kp N8           &kp N9            &kp N0             &kp MINUS
&kp TAB        &kp Q     &kp W      &kp E      &kp R           &kp T                         &kp Y      &kp U              &kp I            &kp O             &kp P              &kp BSLH
&kp ESC        &kp A     &kp S      &kp D      &kp F           &kp G                         &kp H      &kp J              &kp K            &kp L             &kp SEMI           &kp SQT
&kp GRAVE      &kp Z     &kp X      &kp C      &kp V           &kp B                         &kp N      &kp M              &kp COMMA        &kp DOT           &kp FSLH           &kp PAGE_UP
&new_behavior  &kp HOME  &kp END    &kp LEFT   &kp RIGHT                                                &kp UP_ARROW       &kp DOWN         &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp PAGE_DOWN
                                               &kp LEFT_SHIFT  &kp DEL   &tog 2              &kp RGUI   &kp RIGHT_CONTROL  &kp RIGHT_SHIFT
                                               &kp BACKSPACE   &kp LGUI  &kp LEFT_CONTROL    &kp RALT   &kp ENTER          &kp SPACE
            >;
        };

        Numpad_Nav_Layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans    &trans    &trans     &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans    &trans    &trans     &trans  &trans
&trans  &trans  &kp N7  &kp N8  &kp N9  &trans            &trans  &kp HOME  &kp UP    &kp END    &trans  &trans
&trans  &trans  &kp N4  &kp N5  &kp N6  &trans            &trans  &kp LEFT  &kp DOWN  &kp RIGHT  &trans  &trans
&trans  &trans  &kp N1  &kp N2  &kp N3  &trans            &trans  &trans    &trans    &trans     &trans  &trans
&trans  &trans  &trans  &kp N0  &trans                            &trans    &trans    &trans     &trans  &trans
                                &trans  &trans  &trans    &trans  &trans    &trans
                                &trans  &trans  &trans    &trans  &trans    &trans
            >;
        };

        Keyboard_Control_Layer {
            bindings = <
&trans       &trans        &trans        &trans        &trans        &trans                     &trans           &trans           &trans           &trans           &trans           &trans
&bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4               &trans           &rgb_ug RGB_TOG  &rgb_ug RGB_EFF  &trans           &trans           &trans
&sys_reset   &trans        &trans        &trans        &trans        &rgb_ug RGB_EFF            &rgb_ug RGB_TOG  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &rgb_ug RGB_SPI  &sys_reset
&bootloader  &trans        &trans        &trans        &trans        &trans                     &trans           &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD  &rgb_ug RGB_SPD  &bootloader
&bl BL_ON    &bl BL_OFF    &bl BL_TOG    &bl BL_INC    &bl BL_DEC    &bl BL_CYCLE               &trans           &trans           &trans           &trans           &trans           &trans
&trans       &trans        &trans        &trans        &trans                                                    &trans           &trans           &trans           &trans           &trans
                                                       &trans        &trans           &trans    &trans           &trans           &trans
                                                       &trans        &trans           &trans    &trans           &trans           &trans
            >;
        };

        Auto_Mouse_Layer {
            bindings = <
&trans  &trans  &trans     &trans     &trans     &trans            &trans  &trans     &trans     &trans     &trans  &trans
&trans  &trans  &trans     &trans     &trans     &trans            &trans  &trans     &trans     &trans     &trans  &trans
&trans  &trans  &trans     &trans     &trans     &trans            &trans  &trans     &trans     &trans     &trans  &trans
&trans  &trans  &mkp LCLK  &mkp MCLK  &mkp RCLK  &trans            &trans  &mkp LCLK  &mkp MCLK  &mkp RCLK  &trans  &trans
&trans  &trans  &trans     &trans     &trans     &trans            &trans  &trans     &trans     &trans     &trans  &trans
&trans  &trans  &trans     &trans     &trans                               &trans     &trans     &trans     &trans  &trans
                                      &trans     &trans  &trans    &trans  &trans     &trans
                                      &trans     &trans  &trans    &trans  &trans     &trans
            >;
        };
    };
};

// right hand trackball configuration
// &trackball_peripheral_listener {
//    input-processors =
//     activate layer 3 within 500ms of the trackball moving
//     <&zip_temp_layer 3 500>;
// };
//left hand trackball configuration

&trackball_central_listener {
    input-processors =
        // this gets it to the default installation orientation,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
        // <&zip_xy_transform INPUT_TRANSFORM_XY_SWAP>,,,,,,,,,,,,,,
        // multiply sensitivity by 1, divide by 25 (make it slower for scrolling),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
        <&zip_xy_scaler 1 60>,
        // make this trackball output scrolling events by default instead of cursor movement,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
        <&zip_xy_to_scroll_mapper>,
        // invert vertical scrolling so that the view moves in the same direction as the top of the trackball.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
        <&zip_scroll_transform INPUT_TRANSFORM_Y_INVERT>,
        <&zip_scroll_transform INPUT_TRANSFORM_X_INVERT>;
};
